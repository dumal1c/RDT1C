
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	ВыбранныеУзлыПриемники = УзлыПриемники.Скопировать(Новый Структура("Пометка", Истина)).ВыгрузитьКолонку("Ссылка");
	ирОбщий.СкопироватьРаспределитьРегистрациюИзмененийПоУзламЛкс(УзелИсточник, ВыбранныеУзлыПриемники, ВариантКопирования = 1, , ОбъектыМД);
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ирОбщий.ЗагрузитьВТаблицуЗначенийЛкс(Узлы, УзлыПриемники, , Новый Структура("Пометка", Ложь));
	ЭтаФорма.ПланОбменаИсточника = УзелИсточник.Метаданные().Имя;
	
КонецПроцедуры

Процедура КоманднаяПанель1ДобавитьНесуществующийУзел(Кнопка)
	
	Если Не ЗначениеЗаполнено(ИмяПланОбмена) Тогда
		Возврат;
	КонецЕсли; 
	СтрокаУзла = УзлыПриемники.Добавить();
	СтрокаУзла.Ссылка = ПланыОбмена[ИмяПланОбмена].ПолучитьСсылку();
	
КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт 
	
	ирКлиент.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ОбработчикОжиданияСПараметрамиЛкс() Экспорт 
	
	ирКлиент.ОбработчикОжиданияСПараметрамиЛкс();

КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирКлиент.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирКлиент.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

ирКлиент.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирРедакторИзмененийНаУзлах.Форма.ВыборУзловПриемниковДляКопирования");
