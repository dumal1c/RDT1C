
Процедура ОсновныеДействияФормыОК(Кнопка = Неопределено)
	
	Если ПараметрСписок <> Неопределено Тогда
		#Если Сервер И Не Сервер Тогда
			ПараметрСписок = Новый СписокЗначений;
		#КонецЕсли
		Для Каждого ЭлементСписка Из ПараметрСписок Цикл
			СтрокаТаблицы = СписокЗначений.Найти("" + ЭлементСписка.Значение, "ПолноеИмя");
			ЭлементСписка.Пометка = СтрокаТаблицы.Пометка;
		КонецЦикла;
	КонецЕсли; 
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ДействияФормыТолькоПомеченные(Кнопка)
	
	ЭлементыФормы.СписокЗначений.ОтборСтрок.Пометка.ВидСравнения = ВидСравнения.Равно;
	ЭлементыФормы.СписокЗначений.ОтборСтрок.Пометка.Использование = Истина;
	ЭлементыФормы.СписокЗначений.ОтборСтрок.Пометка.Значение = Истина;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ЭлементыФормы.НадписьПомечено.Заголовок = "Помечено " + СписокЗначений.НайтиСтроки(Новый Структура("Пометка", Истина)).Количество() + " из";
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ирОбщий.Форма_ПриОткрытииЛкс(ЭтаФорма);
	СписокЗначений.Очистить();
	МаксКоличествоФрагментов = 3;
	Если ПараметрСписок <> Неопределено Тогда
		#Если Сервер И Не Сервер Тогда
			ПараметрСписок = Новый СписокЗначений;
		#КонецЕсли
		Для Каждого ЭлементСписка Из ПараметрСписок Цикл
			СтрокаТаблицы = СписокЗначений.Добавить();
			СтрокаТаблицы.ПолноеИмя = ЭлементСписка.Значение;
			СтрокаТаблицы.ПолноеПредставление = ЭлементСписка.Представление;
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПолноеПредставление) Тогда
				СтрокаТаблицы.ПолноеПредставление = СтрокаТаблицы.ПолноеИмя;
			КонецЕсли; 
			СтрокаТаблицы.Пометка = ЭлементСписка.Пометка;
			Фрагменты = ирОбщий.СтрРазделитьЛкс(СтрокаТаблицы.ПолноеИмя);
			#Если Сервер И Не Сервер Тогда
				Фрагменты = Новый Массив;
			#КонецЕсли
			Для Счетчик = 1 По Мин(МаксКоличествоФрагментов, Фрагменты.Количество()) Цикл
				СтрокаТаблицы["ИмяФрагмент" + Счетчик] = Фрагменты[Счетчик - 1];
			КонецЦикла;
			Фрагменты = ирОбщий.СтрРазделитьЛкс(СтрокаТаблицы.ПолноеПредставление);
			#Если Сервер И Не Сервер Тогда
				Фрагменты = Новый Массив;
			#КонецЕсли
			Для Счетчик = 1 По Мин(МаксКоличествоФрагментов, Фрагменты.Количество()) Цикл
				СтрокаТаблицы["ПредставлениеФрагмент" + Счетчик] = Фрагменты[Счетчик - 1];
			КонецЦикла;
			Если ПараметрТекущаяСтрока = ЭлементСписка Тогда
				ЭлементыФормы.СписокЗначений.ТекущаяСтрока = СтрокаТаблицы;
			КонецЕсли; 
		КонецЦикла;
		ЭтаФорма.Количество = СписокЗначений.Количество();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ФильтрПредставлениеПриИзменении(Элемент)
	
	ирОбщий.ПолеВводаСИсториейВыбора_ПриИзмененииЛкс(Элемент, ЭтаФорма);
	ОбновитьОтбор();

КонецПроцедуры

Процедура ФильтрИмяПриИзменении(Элемент)
	
	ирОбщий.ПолеВводаСИсториейВыбора_ПриИзмененииЛкс(Элемент, ЭтаФорма);
	ОбновитьОтбор();
	
КонецПроцедуры

Процедура ФильтрИмяНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ирОбщий.ПолеВводаСИсториейВыбора_НачалоВыбораИзСпискаЛкс(Элемент, ЭтаФорма);

КонецПроцедуры

Процедура ФильтрПредставлениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ирОбщий.ПолеВводаСИсториейВыбора_НачалоВыбораИзСпискаЛкс(Элемент, ЭтаФорма);

КонецПроцедуры

Процедура ОбновитьОтбор()
	
	ирОбщий.УстановитьОтборПоПодстрокеЛкс(ЭлементыФормы.СписокЗначений.ОтборСтрок.ПолноеИмя, ФильтрИмя);
	ирОбщий.УстановитьОтборПоПодстрокеЛкс(ЭлементыФормы.СписокЗначений.ОтборСтрок.ПолноеПредставление, ФильтрПредставление);

КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт 
	
	ирОбщий.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ОбработчикОжиданияСПараметрамиЛкс() Экспорт 
	
	ирОбщий.ОбработчикОжиданияСПараметрамиЛкс();

КонецПроцедуры

Процедура СтруктураКоманднойПанелиНажатие(Кнопка)
	
	ирОбщий.ОткрытьСтруктуруКоманднойПанелиЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура СписокЗначенийПриИзмененииФлажка(Элемент, Колонка)
	
	ирОбщий.ТабличноеПолеПриИзмененииФлажкаЛкс(ЭтаФорма, Элемент, Колонка, ЭлементыФормы.ДействияФормы.Кнопки.ТолькоПомеченные);

КонецПроцедуры

Процедура СписокЗначенийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	ирОбщий.ТабличноеПолеПриВыводеСтрокиЛкс(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки);

КонецПроцедуры

Процедура СписокЗначенийПриАктивизацииСтроки(Элемент)
	
	ирОбщий.ТабличноеПолеПриАктивизацииСтрокиЛкс(ЭтаФорма, Элемент);

КонецПроцедуры

Процедура СписокЗначенийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ВыбраннаяСтрока.Пометка = Истина;
	ОсновныеДействияФормыОК();
	
КонецПроцедуры

Процедура ПриЗакрытии()
	ирОбщий.Форма_ПриЗакрытииЛкс(ЭтаФорма);
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирОбщий.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирОбщий.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

Процедура ФильтрПредставлениеАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	Если ирОбщий.ПромежуточноеОбновлениеСтроковогоЗначенияПоляВводаЛкс(ЭтаФорма, Элемент, Текст) Тогда 
		ОбновитьОтбор();
	КонецЕсли;
КонецПроцедуры

Процедура ФильтрИмяАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	Если ирОбщий.ПромежуточноеОбновлениеСтроковогоЗначенияПоляВводаЛкс(ЭтаФорма, Элемент, Текст) Тогда 
		ОбновитьОтбор();
	КонецЕсли;
КонецПроцедуры

ирОбщий.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирАнализЖурналаРегистрации.Форма.РедакторСписка");
