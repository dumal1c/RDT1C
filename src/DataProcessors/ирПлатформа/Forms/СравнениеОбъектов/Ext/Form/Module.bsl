Перем Колонки;
Перем ПолноеИмяТаблицыБД;
Перем СравнениеТаблиц;
Перем ИмяСвойстваНомерСтороны;

Процедура ПриОткрытии()
	
	Если КлючУникальности = "Автотест" Тогда
		Возврат;
	КонецЕсли;
	ирОбщий.Форма_ПриОткрытииЛкс(ЭтаФорма);
	СравнениеТаблиц = ирОбщий.СоздатьОбъектПоПолномуИмениМетаданныхЛкс("Обработка.ирСравнениеТаблиц");
	ирОбщий.УстановитьПрикреплениеФормыВУправляемомПриложенииЛкс(Этаформа);
	
КонецПроцедуры

Функция ОбновитьСоставСвойств()
	
	СостоянияСтрок = ирОбщий.ТабличноеПолеСостояниеСтрокЛкс(ЭлементыФормы.СвойстваОбъектов, "Имя");
	СвойстваОбъектов.Очистить();
	СтрокаСвойства = СвойстваОбъектов.Добавить();
	СтрокаСвойства.Имя = ИмяСвойстваНомерСтороны;
	СтрокаСвойства.Представление = ЭлементыФормы.СвойстваОбъектов.Колонки;
	ТипОбъекта = "";
	Счетчик = 1;
	Для Каждого СтрокаОбъекта Из ТаблицаОбъектов Цикл
		СтрокаОбъекта.НомерСтороны = Счетчик;
		ЗагрузитьСторонуСравнения(СтрокаОбъекта, ТипОбъекта);
		Счетчик = Счетчик + 1;
	КонецЦикла;
	Если СвойстваОбъектов.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли; 
	Если ирОбщий.НеуникальныеЗначенияКолонкиТаблицыЛкс(ТаблицаОбъектов, "ПредставлениеОбъекта").Количество() = 0 Тогда
		Для Каждого СтрокаОбъектов Из ТаблицаОбъектов Цикл
			ЭлементыФормы.СвойстваОбъектов.Колонки["Объект" + СтрокаОбъектов.НомерСтороны].ТекстШапки = СтрокаОбъектов.ПредставлениеОбъекта;
		КонецЦикла;
	КонецЕсли;
	Для Счетчик = ТаблицаОбъектов[ТаблицаОбъектов.Количество() - 1].НомерСтороны + 1 По 100 Цикл
		Если НайтиУдалитьКолонкуПоРоли("Объект", Счетчик) Тогда
			НайтиУдалитьКолонкуПоРоли("Значение", Счетчик);
			НайтиУдалитьКолонкуПоРоли("ПредставлениеЗначения", Счетчик);
			НайтиУдалитьКолонкуПоРоли("ЗначениеУстановлено", Счетчик);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаСвойства Из СвойстваОбъектов Цикл
		МассивТипов = Новый Массив;
		Если СтрокаСвойства.ЗначениеУстановлено1 И Не СтрокаСвойства.ЗначениеУстановлено2 Тогда 
			СтрокаСвойства.ТипРазличия = "Только 1";
			МассивТипов.Добавить(ТипЗнч(СтрокаСвойства["Значение1"]));
		ИначеЕсли СтрокаСвойства.ЗначениеУстановлено2 И Не СтрокаСвойства.ЗначениеУстановлено1 Тогда 
			СтрокаСвойства.ТипРазличия = "Только 2";
			МассивТипов.Добавить(ТипЗнч(СтрокаСвойства["Значение2"]));
		Иначе
			Значение1 = СтрокаСвойства["Значение1"];
			СтрокаЗначения1 = ирОбщий.ОбъектВСтрокуДляСравненияВнутрЛкс(Значение1);
			МассивТипов.Добавить(ТипЗнч(Значение1));
			Для Счетчик = 2 По ТаблицаОбъектов.Количество() Цикл
				ЗначениеХ = СтрокаСвойства["Значение" + Счетчик];
				СтрокаЗначенияХ = ирОбщий.ОбъектВСтрокуДляСравненияВнутрЛкс(ЗначениеХ);
				МассивТипов.Добавить(ТипЗнч(ЗначениеХ));
				Если Ложь
					Или (Истина
						//И Не ирОбщий.ЛиКоллекцияЛкс(Значение1)
						И Значение1 = ЗначениеХ)
					Или (Истина
						И СтрокаЗначения1 <> Неопределено
						И СтрокаЗначенияХ <> Неопределено
						И СтрокаЗначения1 = СтрокаЗначенияХ)
				Тогда
				Иначе
					СтрокаСвойства.ТипРазличия = "Изменено";
					Прервать;
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли; 
		СтрокаСвойства.ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	КонецЦикла;
	СвойстваОбъектов.Сортировать("Имя");
	Если ТолькоРазличия Тогда
		Для Каждого СтрокаРавныхЗначений Из СвойстваОбъектов.НайтиСтроки(Новый Структура("ТипРазличия", "")) Цикл
			СвойстваОбъектов.Удалить(СтрокаРавныхЗначений);
		КонецЦикла;
	КонецЕсли; 
	ирОбщий.ТабличноеПолеВосстановитьСостояниеСтрокЛкс(ЭлементыФормы.СвойстваОбъектов, СостоянияСтрок);
	Если ЗначениеЗаполнено(ПараметрТекущееСвойство) Тогда
		СтрокаТаблицы = СвойстваОбъектов.Найти(ПараметрТекущееСвойство, "Имя");
		Если СтрокаТаблицы <> Неопределено Тогда
			ЭлементыФормы.СвойстваОбъектов.ТекущаяСтрока = СтрокаТаблицы;
		КонецЕсли; 
		ЭтаФорма.ПараметрТекущееСвойство = "";
	КонецЕсли; 
	Если ПараметрТекущийОбъект <> Неопределено Тогда
		СтрокаОбъекта = ТаблицаОбъектов.Найти(ПараметрТекущийОбъект, "Объект");
		ЭлементыФормы.ТаблицаОбъектов.ТекущаяСтрока = СтрокаОбъекта;
		ЭтаФорма.ПараметрТекущийОбъект = Неопределено; 
		ЭлементыФормы.СвойстваОбъектов.ТекущаяКолонка = ЭлементыФормы.СвойстваОбъектов.Колонки["ПредставлениеЗначения" + СтрокаОбъекта.НомерСтороны];
	КонецЕсли;
	ирОбщий.ОбновитьТекстПослеМаркераВСтрокеЛкс(ЭтаФорма.Заголовок, , ТипОбъекта, ": ");
	КоличествоРазличий = СвойстваОбъектов.Количество() - СвойстваОбъектов.НайтиСтроки(Новый Структура("ТипРазличия", "")).Количество();
	ирОбщий.ОбновитьТекстПослеМаркераВСтрокеЛкс(ЭлементыФормы.ДействияФормы.Кнопки.ТолькоРазличия.Текст, , "" + КоличествоРазличий + " шт", ": ");
	Возврат Истина;

КонецФункции

Функция НайтиУдалитьКолонкуПоРоли(Знач ИмяРолиКолонки, Знач НомерСтороны)
	
	Успех = Ложь;
	ИмяКолонки = ИмяРолиКолонки + НомерСтороны;
	КолонкаТП = ЭлементыФормы.СвойстваОбъектов.Колонки.Найти(ИмяКолонки);
	Если КолонкаТП <> Неопределено Тогда
		ЭлементыФормы.СвойстваОбъектов.Колонки.Удалить(КолонкаТП);
		Успех = Истина;
	КонецЕсли;
	КолонкаТЗ = СвойстваОбъектов.Колонки.Найти(ИмяКолонки);
	Если КолонкаТЗ <> Неопределено Тогда
		СвойстваОбъектов.Колонки.Удалить(КолонкаТЗ);
		Успех = Истина;
	КонецЕсли;
	Возврат Успех;

КонецФункции

Процедура ЗагрузитьСторонуСравнения(Знач СтрокаОбъекта, ТипОбъекта = "")
	
	НомерСтороны = СтрокаОбъекта.НомерСтороны;  
	Объект = СтрокаОбъекта.Объект;
	ПоляТаблицыБД = Неопределено;
	СтруктураОбъекта = ирОбщий.СтруктураИзОбъектаЛкс(Объект, ТипОбъекта, ПоляТаблицыБД);
	Для Каждого КлючИЗначение Из СтруктураОбъекта Цикл
		СтрокаСвойства = СвойстваОбъектов.Найти(КлючИЗначение.Ключ, "Имя");
		Если СтрокаСвойства = Неопределено Тогда
			СтрокаСвойства = СвойстваОбъектов.Добавить();
			СтрокаСвойства.Имя = КлючИЗначение.Ключ;
			Если ПоляТаблицыБД <> Неопределено Тогда
				СтрокаПоля = ПоляТаблицыБД.Найти(КлючИЗначение.Ключ, "Имя");
				Если СтрокаПоля <> Неопределено Тогда
					СтрокаСвойства.Представление = СтрокаПоля.Заголовок;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли; 
		ЗначениеСвойства = КлючИЗначение.Значение;
		Если СвойстваОбъектов.Колонки.Найти("Значение" + НомерСтороны) = Неопределено Тогда
			СвойстваОбъектов.Колонки.Добавить("Значение" + НомерСтороны);
			КолонкаТЗ = СвойстваОбъектов.Колонки.Добавить("ПредставлениеЗначения" + НомерСтороны);
			КолонкаТП = ЭлементыФормы.СвойстваОбъектов.Колонки.Добавить("Объект" + НомерСтороны);
			КолонкаТП.ТекстШапки = "Объект " + НомерСтороны;
			КолонкаТП = ЭлементыФормы.СвойстваОбъектов.Колонки.Добавить(КолонкаТЗ.Имя);
			КолонкаТП.ТолькоПросмотр = Истина;
			КолонкаТП.Данные = КолонкаТЗ.Имя;
			КолонкаТП.ТекстШапки = "Значение";
			КолонкаТП.Положение = ПоложениеКолонки.НаСледующейСтроке;
			СвойстваОбъектов.Колонки.Добавить("ЗначениеУстановлено" + НомерСтороны, Новый ОписаниеТипов("Булево"));
		КонецЕсли;
		СтрокаСвойства["Значение" + НомерСтороны] = ЗначениеСвойства;
		СтрокаСвойства["ПредставлениеЗначения" + НомерСтороны] = ЗначениеСвойства;
		СтрокаСвойства["ЗначениеУстановлено" + НомерСтороны] = Истина;
		ирОбщий.ОбновитьТипЗначенияВСтрокеТаблицыЛкс(СтрокаСвойства, "Значение" + НомерСтороны,, "ТипЗначения" + НомерСтороны, "ИмяТипаЗначения" + НомерСтороны,, ЗначениеСвойства);
	КонецЦикла;
	СтрокаНомераСтороны = СвойстваОбъектов.Найти(ИмяСвойстваНомерСтороны, "Имя");
	СтрокаНомераСтороны["Значение" + НомерСтороны] = НомерСтороны;
	СтрокаНомераСтороны["ПредставлениеЗначения" + НомерСтороны] = НомерСтороны;
	СтрокаНомераСтороны["ЗначениеУстановлено" + НомерСтороны] = НомерСтороны;

КонецПроцедуры

Процедура СвойстваОбъектовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	Если ДанныеСтроки.ТипРазличия = "Изменено" Тогда
		ОформлениеСтроки.ЦветФона = СравнениеТаблиц.ОтличаютсяЦветФона;
	ИначеЕсли ДанныеСтроки.ТипРазличия = "Только 1" Тогда
		ОформлениеСтроки.ЦветФона = СравнениеТаблиц.ТолькоВТаблице1ЦветФона;
	ИначеЕсли ДанныеСтроки.ТипРазличия = "Только 2" Тогда
		ОформлениеСтроки.ЦветФона = СравнениеТаблиц.ТолькоВТаблице2ЦветФона;
	КонецЕсли;  
	РасширенныеКолонки = Новый Структура;
	КолонкиСКартинками = Новый Структура;
	Колонки = ЭлементыФормы.СвойстваОбъектов.Колонки;
	Для Счетчик = 1 По 100 Цикл
		ИмяКолонки = "Объект" + Счетчик;
		Если Колонки.Найти(ИмяКолонки) <> Неопределено Тогда
			ОформлениеСтроки.Ячейки[ИмяКолонки].Видимость = Ложь;
			РасширенныеКолонки.Вставить("ПредставлениеЗначения" + Счетчик, "Значение" + Счетчик);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ТипыЗначений = ДанныеСтроки.ОписаниеТипов.Типы();
	Если ТипыЗначений.Количество() <> 1 Тогда
		КолонкиСКартинками = РасширенныеКолонки;
	КонецЕсли;
	ирОбщий.ТабличноеПолеПриВыводеСтрокиЛкс(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки, ЭлементыФормы.ДействияФормы.Кнопки.Идентификаторы, КолонкиСКартинками, РасширенныеКолонки);
	Если ТипыЗначений.Количество() = 1 Тогда
		ТипЗначенийСвойства = ТипыЗначений[0]; 
	Иначе
		ТипЗначенийСвойства = ТипЗнч(Неопределено);
	КонецЕсли;
	Если ЭлементыФормы.СвойстваОбъектов.Колонки.Имя.Видимость Тогда
		ИмяПервойВидимойКолонки = "Имя";
	Иначе
		ИмяПервойВидимойКолонки = "Представление";
	КонецЕсли;
	КартинкаТипа = ирОбщий.КартинкаТипаЛкс(ТипЗначенийСвойства);
	ОформлениеСтроки.Ячейки[ИмяПервойВидимойКолонки].УстановитьКартинку(КартинкаТипа);
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка = Неопределено)
	
	ЗагрузитьДанные();

КонецПроцедуры

Функция ЗагрузитьДанные()
	
	ТаблицаОбъектов.Очистить();
	Для Каждого ЭлементСписка Из ПараметрОбъекты Цикл
		СтрокаОбъекта = ТаблицаОбъектов.Добавить();
		СтрокаОбъекта.Объект = ЭлементСписка.Значение;
		Если ЗначениеЗаполнено(ЭлементСписка.Представление) Тогда
			СтрокаОбъекта.ПредставлениеОбъекта = ЭлементСписка.Представление;
		Иначе
			СтрокаОбъекта.ПредставлениеОбъекта = ирОбщий.РасширенноеПредставлениеЗначенияЛкс(ЭлементСписка.Значение,, Истина);
		КонецЕсли;
		СтрокаОбъекта.ТипОбъекта = ТипЗнч(ЭлементСписка.Значение);
	КонецЦикла;
	Успех = Истина;
	ЭлементыФормы.ДействияФормы.Кнопки.СравнитьКакКоллекции.Доступность = ирОбщий.ЛиКоллекцияЛкс(Объект1);
	Если Не ОбновитьСоставСвойств() Тогда 
		Успех = Ложь;
		Если ирОбщий.ЛиКоллекцияЛкс(Объект1) Тогда 
			ДействияФормыСравнитьКакКоллекции();
		Иначе
			ирОбщий.СравнитьЗначенияВФормеЧерезXMLЛкс(Объект1, Объект2);
		КонецЕсли; 
	КонецЕсли;
	Возврат Успех;

КонецФункции

Процедура СвойстваОбъектовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Ложь
		ИЛи Колонка = ЭлементыФормы.СвойстваОбъектов.Колонки.ПредставлениеЗначения1 
		Или Колонка = ЭлементыФормы.СвойстваОбъектов.Колонки.ПредставлениеЗначения2
	Тогда 
		НомерСтороны = Прав(Колонка.Имя, 1);
		ирОбщий.ЯчейкаТабличногоПоляРасширенногоЗначения_ВыборЛкс(ЭтаФорма, Элемент, СтандартнаяОбработка, ВыбраннаяСтрока["Значение" + НомерСтороны]);
	ИначеЕсли ВыбраннаяСтрока.ТипРазличия = "Изменено" И Колонка = ЭлементыФормы.СвойстваОбъектов.Колонки.ТипРазличия Тогда  
		ирОбщий.Сравнить2ЗначенияВФормеЛкс(ВыбраннаяСтрока["Значение1"], ВыбраннаяСтрока["Значение2"],,,,,, Новый УникальныйИдентификатор);
	Иначе
		ирОбщий.ЯчейкаТабличногоПоляРасширенногоЗначения_ВыборЛкс(ЭтаФорма, Элемент, СтандартнаяОбработка,, Ложь);
	КонецЕсли; 
	
КонецПроцедуры

Процедура СтруктураКоманднойПанелиНажатие(Кнопка)
	
	ирОбщий.ОткрытьСтруктуруКоманднойПанелиЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт 
	
	ирОбщий.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура СвойстваОбъектовПриИзмененииФлажка(Элемент, Колонка)
	
	ирОбщий.ТабличноеПолеПриИзмененииФлажкаЛкс(ЭтаФорма, Элемент, Колонка);
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирОбщий.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирОбщий.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

Процедура ПриЗакрытии()
	
	ирОбщий.Форма_ПриЗакрытииЛкс(ЭтаФорма);

КонецПроцедуры

Процедура ДействияФормыИсследовать(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.СвойстваОбъектов.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	МетаданныеПоля = МетаданныеПоля(ТекущаяСтрока);
	Если МетаданныеПоля = Неопределено Тогда
		МетаданныеПоля = ирОбщий.ОбъектМДПоПолномуИмениТаблицыБДЛкс(ИмяТаблицыБД);
	КонецЕсли; 
	ирОбщий.ОткрытьОбъектМетаданныхЛкс(МетаданныеПоля);
	
КонецПроцедуры

Функция МетаданныеПоля(Знач ТекущаяСтрока = Неопределено)
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекущаяСтрока = ЭлементыФормы.СвойстваОбъектов.ТекущаяСтрока;
	КонецЕсли; 
	ИмяТаблицыБДВсеПоля = ИмяТаблицыБД;
	Если ирОбщий.ЛиКорневойТипРегистраБухгалтерииЛкс(ирОбщий.ТипТаблицыБДЛкс(ИмяТаблицыБД)) Тогда
		ИмяТаблицыБДВсеПоля = ИмяТаблицыБДВсеПоля + ".ДвиженияССубконто";
	КонецЕсли; 
	ПоляТаблицыБД = ирКэш.ПоляТаблицыБДЛкс(ИмяТаблицыБДВсеПоля);
	ПолеТаблицы = ПоляТаблицыБД.Найти(ТекущаяСтрока.Имя);
	МетаданныеПоля = ПолеТаблицы.Метаданные;
	Возврат МетаданныеПоля;

КонецФункции

Процедура ДействияФормыАнализПравДоступа(Кнопка)
	
	Если ЭлементыФормы.СвойстваОбъектов.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ПолноеИмяПоляТаблицы = ИмяТаблицыБД + "." + ЭлементыФормы.СвойстваОбъектов.ТекущаяСтрока.Имя;
	Форма = ирОбщий.ПолучитьФормуЛкс("Отчет.ирАнализПравДоступа.Форма",,, "" + ПолноеИмяПоляТаблицы);
	Форма.НаборПолей.Добавить(ПолноеИмяПоляТаблицы);
	Форма.ВычислятьФункциональныеОпции = Истина;
	Форма.ПараметрКлючВарианта = "ПоПолямМетаданных";
	Форма.Открыть();
	
КонецПроцедуры

Процедура СвойстваОбъектовПриАктивизацииСтроки(Элемент)
	ирОбщий.ТабличноеПолеПриАктивизацииСтрокиЛкс(ЭтаФорма, Элемент);
	НомерСтороны = СвойстваОбъектов.Найти(ИмяСвойстваНомерСтороны, "Имя")[ЭлементыФормы.СвойстваОбъектов.ТекущаяКолонка.Данные];
	Если ТипЗнч(НомерСтороны) = Тип("Число") Тогда
		СтрокаОбъекта = ТаблицаОбъектов.Найти(НомерСтороны, "НомерСтороны");
		ЭлементыФормы.ТаблицаОбъектов.ТекущаяСтрока = СтрокаОбъекта;
	КонецЕсли;
	Для Каждого СтрокаОбъекта Из ТаблицаОбъектов Цикл
		СтрокаОбъекта.ПредставлениеЗначения = ЭлементыФормы.СвойстваОбъектов.ТекущаяСтрока["ПредставлениеЗначения" + СтрокаОбъекта.НомерСтороны]; 
	КонецЦикла;
КонецПроцедуры

Процедура ПредставлениеОбъекта1Открытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ирОбщий.ИсследоватьЛкс(Объект1);
	
КонецПроцедуры

Процедура ПредставлениеОбъекта2Открытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ирОбщий.ИсследоватьЛкс(Объект2);
	
КонецПроцедуры

Процедура ДействияФормыСравнитьКакКоллекции(Кнопка = Неопределено)
	
	ирОбщий.Сравнить2ЗначенияВФормеЛкс(Объект1, Объект2,,,,,,, Истина);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если КлючУникальности = "Автотест" Тогда
		Возврат;
	КонецЕсли;
	Если Не ЗагрузитьДанные() Тогда 
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДействияФормыТолькоРазличия(Кнопка)
	
	ТолькоРазличия = Не Кнопка.Пометка;
	Кнопка.Пометка = ТолькоРазличия;
	ОбновитьСоставСвойств();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник) Экспорт
	
	ирОбщий.Форма_ОбработкаОповещенияЛкс(ЭтаФорма, ИмяСобытия, Параметр, Источник); 

КонецПроцедуры

Процедура ТаблицаОбъектовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ирОбщий.ИсследоватьЛкс(ВыбраннаяСтрока.Объект);
КонецПроцедуры

Процедура ТаблицаОбъектовПриАктивизацииСтроки(Элемент)
	ирОбщий.ТабличноеПолеПриАктивизацииСтрокиЛкс(ЭтаФорма, Элемент);
КонецПроцедуры

Процедура ТаблицаОбъектовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ирОбщий.ТабличноеПолеПриВыводеСтрокиЛкс(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки);
КонецПроцедуры

Процедура ДействияФормыОбновить(Кнопка)
	ОбновитьСоставСвойств();
КонецПроцедуры

ирОбщий.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.СравнениеОбъектов");
СвойстваОбъектов.Колонки.Добавить("Значение1");
СвойстваОбъектов.Колонки.Добавить("Значение2");
СвойстваОбъектов.Колонки.Добавить("ЗначениеУстановлено1", Новый ОписаниеТипов("Булево"));
СвойстваОбъектов.Колонки.Добавить("ЗначениеУстановлено2", Новый ОписаниеТипов("Булево"));
ТаблицаОбъектов.Колонки.Добавить("Объект"); 
ИмяСвойстваНомерСтороны = "<Номер>";
ТолькоРазличия = Истина;