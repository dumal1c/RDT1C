
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Попытка
		НовоеЗначение = Новый УникальныйИдентификатор(УникальныйИдентификатор);
	Исключение
		Сообщить("Неверная строка идентификатора!", СтатусСообщения.Внимание);
		Возврат;
	КонецПопытки; 
	ирКлиент.ПрименитьИзмененияИЗакрытьФормуЛкс(ЭтаФорма, НовоеЗначение);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ТипЗнч(НачальноеЗначениеВыбора) <> Тип("УникальныйИдентификатор") Тогда
		НачальноеЗначениеВыбора = Новый УникальныйИдентификатор();
	КонецЕсли; 
	ирКлиент.ФормаОбъекта_ОбновитьЗаголовокЛкс(ЭтаФорма);
	УстановитьПрямойИД("" + НачальноеЗначениеВыбора);

КонецПроцедуры

Процедура УстановитьПрямойИД(НовыйИД)
	
	УникальныйИдентификатор = НовыйИД;
	УникальныйИдентификаторПриИзменении();
	
КонецПроцедуры

Процедура ИзПредставленияНенайденногоОбъектаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	мПлатформа = ирКэш.Получить();
	#Если Сервер И Не Сервер Тогда
		мПлатформа = Обработки.ирПлатформа.Создать();
	#КонецЕсли
	УникальныйИдентификаторЛ = мПлатформа.УникальныйИдентификаторИзСтроки(Текст);
	Если УникальныйИдентификаторЛ <> Неопределено Тогда
		УстановитьПрямойИД(УникальныйИдентификаторЛ);
		ЭтаФорма.Модифицированность = Истина;
		Элемент.ЦветФонаПоля = WebЦвета.СветлоЗеленый;
	Иначе
		Маркер = "e1cib/data/";
		Если ирОбщий.СтрокиРавныЛкс(Лев(Текст, СтрДлина(Маркер)), Маркер) Тогда
			ТекстСсылки = Сред(Текст, СтрДлина(Маркер) + 1);
			Разделитель = "?ref=";
			ОбратныйИдентификатор = ирОбщий.ПоследнийФрагментЛкс(ТекстСсылки, Разделитель);
			УстановитьПрямойИД(ОбратныйИдентификатор);
		КонецЕсли; 
		Элемент.ЦветФонаПоля = WebЦвета.СветлоРозовый;
	КонецЕсли;

КонецПроцедуры

Процедура ОсновныеДействияФормыСгенерировать(Кнопка)
	
	УстановитьПрямойИД("" + Новый УникальныйИдентификатор);
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура УникальныйИдентификаторПриИзменении(Элемент = Неопределено)
	
	ЭтаФорма.Обратный = ирОбщий.ПолучитьГУИДИнверсныйИзПрямогоЛкс(УникальныйИдентификатор);

КонецПроцедуры

Процедура ОбратныйПриИзменении(Элемент = Неопределено)

	УникальныйИдентификатор = ирОбщий.ПолучитьГУИДПрямойИзИнверсногоЛкс(Обратный);
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирКлиент.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирКлиент.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

ирКлиент.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.УникальныйИдентификатор");
