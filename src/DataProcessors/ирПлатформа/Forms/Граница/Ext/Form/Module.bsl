
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	НовоеЗначение = ПолучитьРезультат();
	ирКлиент.ПрименитьИзмененияИЗакрытьФормуЛкс(ЭтаФорма, НовоеЗначение);
	
КонецПроцедуры

Функция ПолучитьРезультат()
	
	Возврат Новый Граница(Значение, РеквизитВидГраницы);

КонецФункции

Процедура ПриОткрытии()
	
	ирКлиент.Форма_ПриОткрытииЛкс(ЭтаФорма);
	Если ТипЗнч(НачальноеЗначениеВыбора) <> Тип("Граница") Тогда
		НачальноеЗначениеВыбора = Новый Граница(ТекущаяДата(), ВидГраницы.Исключая);
	КонецЕсли; 
	ирКлиент.ФормаОбъекта_ОбновитьЗаголовокЛкс(ЭтаФорма);
	ЭтаФорма.Значение = НачальноеЗначениеВыбора.Значение;
	ЭтаФорма.РеквизитВидГраницы = НачальноеЗначениеВыбора.ВидГраницы;
	ЗначениеПриИзменении();
	ЭлементыФормы.Значение.ТипЗначения = ирОбщий.ОписаниеТиповВсеРедактируемыеТипыЛкс();
	ЭлементыФормы.Значение.Значение = Значение;
	ЭлементыФормы.Значение.КнопкаОткрытия = Истина;

КонецПроцедуры

Процедура ОсновныеДействияФормыИсследовать(Кнопка)
	
	ирОбщий.ИсследоватьЛкс(ПолучитьРезультат());
	
КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт 
	
	ирКлиент.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ОбработчикОжиданияСПараметрамиЛкс() Экспорт 
	
	ирКлиент.ОбработчикОжиданияСПараметрамиЛкс();

КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирКлиент.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирКлиент.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

Процедура ПриЗакрытии()
	ирКлиент.Форма_ПриЗакрытииЛкс(ЭтаФорма);
КонецПроцедуры

Процедура ЗначениеПриИзменении(Элемент = Неопределено)
	
	Если Элемент <> Неопределено Тогда
		ЭтаФорма.Значение = ЭлементыФормы.Значение.Значение;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ирКлиент.ПолеВводаРасширенногоЗначения_НачалоВыбораЛкс(Элемент, СтандартнаяОбработка, Значение) Тогда 
		ЗначениеПриИзменении();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ирКлиент.ПолеВвода_ОкончаниеВводаТекстаЛкс(Элемент, Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры

ирКлиент.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирПлатформа.Форма.Граница");
СписокВыбора = ЭлементыФормы.ВидГраницы.СписокВыбора;
СписокВыбора.Добавить(ВидГраницы.Включая, "Включая");
СписокВыбора.Добавить(ВидГраницы.Исключая, "Исключая");
