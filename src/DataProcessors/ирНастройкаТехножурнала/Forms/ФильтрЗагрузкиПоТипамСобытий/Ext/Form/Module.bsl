
Процедура КнопкаОКНажатие(Кнопка)

	Закрыть(ТипыСобытий.Выгрузить(Новый Структура("Пометка", Истина)).ВыгрузитьКолонку("Имя"));
	
КонецПроцедуры

Процедура ДействияФормыТолькоПомеченные(Кнопка)
	
	ОбновитьОтборТаблицыСобытий(Не Кнопка.Пометка);
	
КонецПроцедуры

Процедура ОбновитьОтборТаблицыСобытий(ЛиТолькоПомеченныеСобытия)
	
	ЭлементыФормы.ТипыСобытий.ОтборСтрок.Пометка.Значение = Истина;
	ЭлементыФормы.ТипыСобытий.ОтборСтрок.Пометка.Использование = ЛиТолькоПомеченныеСобытия;
	ЭлементыФормы.ДействияФормы.Кнопки.ТолькоПомеченные.Пометка = ЛиТолькоПомеченныеСобытия;
КонецПроцедуры

Процедура ПриОткрытии()
	
	ирОбщий.Форма_ПриОткрытииЛкс(ЭтаФорма);
	ЗаполнитьТаблицуТиповСобытий();
	СтрокаВсе = ТипыСобытий.Найти("<ALL>", "Имя");
	ТипыСобытий.Удалить(СтрокаВсе);
	Если НачальноеЗначениеВыбора <> Неопределено Тогда
		Для Каждого ВыбранноеСобытие Из НачальноеЗначениеВыбора Цикл
			СтрокаСобытия = ТипыСобытий.Найти(ВыбранноеСобытие, "Имя");
			Если СтрокаСобытия <> Неопределено Тогда
				СтрокаСобытия.Пометка = Истина;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли; 
	ОбновитьОтборТаблицыСобытий(ТипыСобытий.Найти(Истина, "Пометка") <> Неопределено);
	
КонецПроцедуры

Процедура СтруктураКоманднойПанелиНажатие(Кнопка)
	
	ирОбщий.ОткрытьСтруктуруКоманднойПанелиЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура СобытияПриИзмененииФлажка(Элемент, Колонка)
	
	ирОбщий.ТабличноеПолеПриИзмененииФлажкаЛкс(ЭтаФорма, Элемент, Колонка, ЭлементыФормы.ДействияФормы.Кнопки.ТолькоПомеченные);
	
КонецПроцедуры

Процедура СобытияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
	
	ирОбщий.ТабличноеПолеПриВыводеСтрокиЛкс(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки);

КонецПроцедуры

Процедура СобытияПриАктивизацииСтроки(Элемент)
	
	ирОбщий.ТабличноеПолеПриАктивизацииСтрокиЛкс(ЭтаФорма, Элемент);

КонецПроцедуры

Процедура ПриЗакрытии()
	ирОбщий.Форма_ПриЗакрытииЛкс(ЭтаФорма);
КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт 
	
	ирОбщий.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирОбщий.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирОбщий.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

ирОбщий.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирНастройкаТехножурнала.Форма.ФильтрЗагрузкиПоТипамСобытий");
