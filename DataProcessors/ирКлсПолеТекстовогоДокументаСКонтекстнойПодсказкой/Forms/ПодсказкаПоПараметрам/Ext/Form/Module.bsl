Перем ВКОбщая;
Перем СтруктураТипаКонтекста Экспорт; 
Перем ИмяМетода Экспорт;
Перем НомерПараметра;
Перем НачалоБездействия;
Перем КонечнаяКолонка;
Перем КонечнаяСтрока;
Перем НачальнаяКолонка;
Перем НачальнаяСтрока;

Процедура ОбновлениеОтображения()
	
	Если ВКОбщая <> Неопределено Тогда
		Активизировать();
		ВКОбщая.ПереместитьОкноВПозициюКаретки();
		ВКОбщая = Неопределено;
	КонецЕсли; 
	ФормаВладелец.Активизировать();

КонецПроцедуры

// Надо вызывать до начала открытия (до ПередОткрытием), иначе недоступность формы-владельца будет сброшена
Процедура ЗапомнитьПозициюКаретки() Экспорт 
	
	Если Открыта() Тогда
		Возврат;
	КонецЕсли; 
	ВКОбщая = ирОбщий.НоваяВКОбщаяЛкс();
	ОбработкаПрерыванияПользователя();
	Если ВКОбщая <> Неопределено Тогда
		ВКОбщая.ПолучитьПозициюКаретки();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПриЛюбомОтрытии();
	
КонецПроцедуры

Процедура ПриЛюбомОтрытии()
	
	ОтключитьОбработчикОжидания("ОбновитьИлиЗакрытьФорму");
	ОбновитьИлиЗакрытьФорму();

КонецПроцедуры

Процедура ОбновитьИлиЗакрытьФорму()
	Если ФормаВладелец = Неопределено Тогда
		Если Открыта() Тогда 
			Закрыть();
		КонецЕсли; 
		Возврат;
	КонецЕсли;
	РезультатРазбора = ПолучитьТекущийКонтекстПараметра();
	ИмяМетода = ирОбщий.ПервыйФрагментЛкс(ирОбщий.ПоследнийФрагментЛкс(РезультатРазбора.ОбъектноеВыражение), "(");
	ТаблицаСтруктурТиповКонтекста = ОпределитьТипЗначенияКонтекста(РезультатРазбора.ОбъектноеВыражение, " " + мТекстДляПоискаОпределения, мПредшествующийТекст);
	СтруктураТипаКонтекста = ТаблицаСтруктурТиповКонтекста[0];
	Если СтруктураТипаКонтекста = Неопределено Или СтруктураТипаКонтекста.СтрокаОписания = Неопределено Тогда
		Если Открыта() Тогда 
			Закрыть();
		КонецЕсли; 
		Возврат;
	КонецЕсли; 
	ирОбщий.ОбновитьТекстПослеМаркераВСтрокеЛкс(ЭтаФорма.Заголовок,, ИмяМетода, ": ");
	#Если Сервер И Не Сервер Тогда
		мПлатформа = Обработки.ирПлатформа.Создать();
	#КонецЕсли
	ТаблицаПараметров.Очистить();
	Отбор = Новый Структура;
	Если ТипЗнч(СтруктураТипаКонтекста.СтрокаОписания) = Тип("Структура") Тогда
		СтрокиПараметров = СтруктураТипаКонтекста.СтрокаОписания.МетодМодуля.Параметры;
	Иначе
		Отбор.Вставить("ТипКонтекста", СтруктураТипаКонтекста.СтрокаОписания.ТипКонтекста);
		Отбор.Вставить("Слово", ИмяМетода);
		Отбор.Вставить("ЯзыкПрограммы", ЯзыкПрограммы);
		СтрокиПараметров = мПлатформа.ТаблицаПараметров.Скопировать(Отбор);
	КонецЕсли; 
	ирОбщий.ЗагрузитьВТаблицуЗначенийЛкс(СтрокиПараметров, ТаблицаПараметров);
	Для Каждого СтрокаПараметра Из ТаблицаПараметров Цикл
		//СтрокаПараметра.Параметр = ирОбщий.ДекодироватьТекстИзXMLЛкс(СтрокаПараметра.Параметр);
		СтрокаПараметра.Параметр = СтрЗаменить(СтрокаПараметра.Параметр, "&gt;", "");
		СтрокаПараметра.Параметр = СтрЗаменить(СтрокаПараметра.Параметр, "&lt;", "");
		Если СтрокаПараметра.Знач = Истина Тогда
			СтрокаПараметра.Знач = "Знач";
		Иначе
			СтрокаПараметра.Знач = "";
		КонецЕсли; 
	КонецЦикла;
	ЭтаФорма.Высота = 15 * (ТаблицаПараметров.Количество() + 2);
	НомерПараметра = мНомерПараметра;
	Если Ложь
		Или НачальнаяСтрока <> мНачальнаяСтрока 
		Или НачальнаяКолонка <> мНачальнаяКолонка 
		Или КонечнаяСтрока <> мКонечнаяСтрока
		Или КонечнаяКолонка <> мКонечнаяКолонка
	Тогда
		НачалоБездействия = ТекущаяДата();
		НачальнаяСтрока = мНачальнаяСтрока;
		НачальнаяКолонка = мНачальнаяКолонка;
		КонечнаяСтрока = мКонечнаяСтрока;
		КонечнаяКолонка = мКонечнаяКолонка;
	КонецЕсли; 
	Если НомерПараметра = Неопределено Или ТекущаяДата() - НачалоБездействия > 1 Тогда
		Закрыть();
	Иначе
		Если ТаблицаПараметров.Количество() >= НомерПараметра Тогда
			НоваяТекущаяСтрока = ТаблицаПараметров[НомерПараметра - 1];
		Иначе
			НоваяТекущаяСтрока = ТаблицаПараметров.Добавить();
			НоваяТекущаяСтрока.Параметр = "?";
		КонецЕсли; 
		ЭлементыФормы.ТаблицаПараметров.ТекущаяСтрока = НоваяТекущаяСтрока;
		ПодключитьОбработчикОжидания("ОбновитьИлиЗакрытьФорму", 1, Истина);
	КонецЕсли; 
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	ПриЛюбомОтрытии();
	
КонецПроцедуры

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирКлсПолеТекстовогоДокументаСКонтекстнойПодсказкой.Форма.ПодсказкаПоПараметрам");
