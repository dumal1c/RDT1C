Функция СохраняемаяНастройкаФормы(выхНаименование, выхИменаСвойств) Экспорт 
	выхИменаСвойств = "Форма.ШиринГенерируемогоТекста";
	Возврат Неопределено;
КонецФункции

Процедура ОсновныеДействияФормыСохранитьНастройки(Кнопка)
	
	ирОбщий.ВыбратьИСохранитьНастройкуФормыЛкс(ЭтаФорма);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗагрузитьНастройки(Кнопка)
	
	ирОбщий.ВыбратьИЗагрузитьНастройкуФормыЛкс(ЭтаФорма);

КонецПроцедуры

Процедура ТаблицаПараметровПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ирОбщий.ТабличноеПолеПриВыводеСтрокиЛкс(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки);
	ОформлениеСтроки.Ячейки.ЭтоРезультат.ТолькоПросмотр = ТипыВнешнихПереходов.Количество() > 0 Или Не ДанныеСтроки.Выход;
	ОформлениеСтроки.Ячейки.Выход.ТолькоПросмотр = Не ДанныеСтроки.Вход;
	
КонецПроцедуры

Процедура ТаблицаПараметровПриАктивизацииСтроки(Элемент)
	
	ирОбщий.ТабличноеПолеПриАктивизацииСтрокиЛкс(ЭтаФорма, Элемент);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ирОбщий.СоздатьМенеджерСохраненияНастроекФормыЛкс(ЭтаФорма);
	ирОбщий.Форма_ПриОткрытииЛкс(ЭтаФорма);
	Если ТипыВнешнихПереходов.Количество() = 0 Тогда
		СтрокиРезультата = ТаблицаПараметров.НайтиСтроки(Новый Структура("Вход, Выход", Ложь, Истина));
		Если СтрокиРезультата.Количество() > 0 Тогда
			СтрокиРезультата[0].ЭтоРезультат = Истина;
		КонецЕсли; 
	КонецЕсли; 
	ТаблицаПараметров.Сортировать("Позиция");
	
КонецПроцедуры

Процедура ТаблицаПараметровПриИзмененииФлажка(Элемент, Колонка)
	
	ирОбщий.ТабличноеПолеПриИзмененииФлажкаЛкс(Элемент, Колонка);
	Если ЭлементыФормы.ТаблицаПараметров.ТекущаяКолонка = ЭлементыФормы.ТаблицаПараметров.Колонки.ЭтоРезультат Тогда
		Если ЭлементыФормы.ТаблицаПараметров.ТекущаяСтрока.ЭтоРезультат Тогда
			ТаблицаПараметров.ЗаполнитьЗначения(Ложь, "ЭтоРезультат");
			ЭлементыФормы.ТаблицаПараметров.ТекущаяСтрока.ЭтоРезультат = Истина;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДействияФормыПрименить(Кнопка)
	
	ЭтаФорма.ПолноеОпределение = НачалоОпределения + ТекстСмещения + СокрЛП(ЭлементыФормы.ПолеТела.ПолучитьТекст()) + Символы.ПС + КонецОпределения;
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ТекстВозвратаРезультата = "";
	ТекстВставки = "";
	СтрокаПараметровВызова = "";
	СтрокаПараметровОпределения = "";
	Разделитель = ", ";
	КомментарийМетода = "";
	ПрефиксОписанияПараметра = "//    ";
	Для Каждого СтрокаПараметра Из ТаблицаПараметров Цикл
		Если СтрокаПараметра.ЭтоРезультат И Не СтрокаПараметра.Вход Тогда
			Продолжить;
		КонецЕсли; 
		КомментарийМетода = КомментарийМетода + ПрефиксОписанияПараметра + СтрокаПараметра.Имя + " - " + СтрокаПараметра.ТипЗначения + " - " + СтрокаПараметра.Описание + Символы.ПС;
		Если СтрДлина(СтрокаПараметровВызова) > ШиринГенерируемогоТекста Тогда
			СтрокаПараметровВызова = СтрокаПараметровВызова + Символы.ПС;
		КонецЕсли; 
		СтрокаПараметровВызова = СтрокаПараметровВызова + Разделитель + СтрокаПараметра.Имя;
		Если СтрДлина(СтрокаПараметровОпределения) > ШиринГенерируемогоТекста Тогда
			СтрокаПараметровОпределения = СтрокаПараметровОпределения + Символы.ПС;
		КонецЕсли; 
		СтрокаПараметровОпределения = СтрокаПараметровОпределения + Разделитель;
		Если Не СтрокаПараметра.Выход Тогда
			СтрокаПараметровОпределения = СтрокаПараметровОпределения + "Знач ";
		КонецЕсли; 
		СтрокаПараметровОпределения = СтрокаПараметровОпределения + СтрокаПараметра.Имя;
		Если Не СтрокаПараметра.Обязательный Тогда
			СтрокаПараметровОпределения = СтрокаПараметровОпределения + " = " + ирОбщий.ЛитеральноеПредставлениеЗначенияВоВстроенномЯзыкеЛкс(СтрокаПараметра.Значение);
		КонецЕсли; 
	КонецЦикла;
	СтрокаПараметровВызова = Сред(СтрокаПараметровВызова, СтрДлина(Разделитель) + 1);
	СтрокаПараметровОпределения = Сред(СтрокаПараметровОпределения, СтрДлина(Разделитель) + 1);
	Если ЗначениеЗаполнено(КомментарийМетода) Тогда
		КомментарийМетода = "// Параметры:" + Символы.ПС + КомментарийМетода;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Описание) Тогда
		КомментарийМетода = Сред(ирОбщий.ДобавитьМногострочнуюСтрокуВТекстЛкс(, Описание, "// ", Истина), 2) + Символы.ПС + КомментарийМетода;
	КонецЕсли; 
	ИмяПараметраВозврата = "ПараметрВозврата";
	СтрокаРезультата = ТаблицаПараметров.Найти(Истина, "ЭтоРезультат");
	Если ТипыВнешнихПереходов.Количество() > 0 Или СтрокаРезультата <> Неопределено Тогда
		НачалоОпределения = "Функция";
		КонецОпределения = "";
		Если ТипыВнешнихПереходов.Количество() > 0 Тогда
			Если ТипыВнешнихПереходов.Свойство("Возврат") Тогда
				ТекстВозвратаРезультата = ИмяПараметраВозврата + " = ";
			КонецЕсли; 
			КонецОпределения = ТекстСмещения + "Возврат Неопределено;";
		Иначе
			ТекстВозвратаРезультата = СтрокаРезультата.Имя + " = ";
			КонецОпределения = ТекстСмещения + "Возврат " + СтрокаРезультата.Имя + ";";
			КомментарийМетода = КомментарийМетода + "// Возвращаемое значение:" + Символы.ПС + ПрефиксОписанияПараметра + СтрокаРезультата.ТипЗначения + " - " + СтрокаРезультата.Описание + Символы.ПС;
		КонецЕсли; 
		КонецОпределения = КонецОпределения + Символы.ПС + "КонецФункции";
	Иначе
		НачалоОпределения = "Процедура";
		КонецОпределения = "КонецПроцедуры";
	КонецЕсли;
	НачалоОпределения = НачалоОпределения + " " + Имя + "(" + СтрокаПараметровОпределения + ") Экспорт " + Символы.ПС;
	НачалоОпределения = КомментарийМетода + НачалоОпределения;
	ЭлементыФормы.ПолеНачала.УстановитьТекст(НачалоОпределения);
	КоличествоСтрок = ЭлементыФормы.ПолеНачала.КоличествоСтрок();
	ЭлементыФормы.ПолеНачала.УстановитьГраницыВыделения(КоличествоСтрок, 1, КоличествоСтрок, 1);
	ЭлементыФормы.ПолеКонца.УстановитьТекст(КонецОпределения);
	Для Каждого СтрокаПараметраВыхода Из ТаблицаПараметров.НайтиСтроки(Новый Структура("Вход, Выход, ЭтоРезультат", Ложь, Истина, Ложь)) Цикл
		ТекстВставки = ТекстВставки + ТекстСмещения + СтрокаПараметраВыхода.Имя + " = Неопределено;" + Символы.ПС;
	КонецЦикла;
	ТекстВставки = ТекстВставки + ТекстСмещения + ТекстВозвратаРезультата + Имя + "(" + СтрокаПараметровВызова + ");" + Символы.ПС;
	ТекстУсловияПерехода = "";
	Для Каждого КлючИЗначение Из ТипыВнешнихПереходов Цикл
		ТекстУсловияПерехода = ТекстУсловияПерехода + ТекстСмещения;
		Если ЗначениеЗаполнено(ТекстУсловияПерехода) Тогда
			ТекстУсловияПерехода = ТекстУсловияПерехода + "Иначе";
		КонецЕсли; 
		ТекстУсловияПерехода = ТекстУсловияПерехода + "Если " + ИмяПараметраТипаВыхода + " = """ + КлючИЗначение.Ключ + """ Тогда" + Символы.ПС;
		ТекстУсловияПерехода = ТекстУсловияПерехода + ТекстСмещения + Символы.Таб + КлючИЗначение.Ключ;
		Если КлючИЗначение.Ключ = "Возврат" Тогда
			ТекстУсловияПерехода = ТекстУсловияПерехода + " " + ИмяПараметраВозврата;
		КонецЕсли; 
		ТекстУсловияПерехода = ТекстУсловияПерехода + ";" + Символы.ПС;
	КонецЦикла;
	Если ТекстУсловияПерехода <> "" Тогда
		ТекстУсловияПерехода = ТекстУсловияПерехода + ТекстСмещения + "КонецЕсли;" + Символы.ПС;
	КонецЕсли; 
	ТекстВставки = ТекстВставки + ТекстУсловияПерехода;
	ЭлементыФормы.ПолеВызова.УстановитьТекст(ТекстВставки);

КонецПроцедуры

Процедура ДействияФормыСтруктураФормы(Кнопка)
	
	ирОбщий.ОткрытьСтруктуруФормыЛкс(ЭтаФорма);

КонецПроцедуры

Процедура ПриЗакрытии()
	
	ирОбщий.Форма_ПриЗакрытииЛкс(ЭтаФорма);
	
КонецПроцедуры

Процедура ТаблицаПараметровОписаниеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ирОбщий.ПолеВводаРасширенногоЗначения_НачалоВыбораЛкс(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	ирОбщий.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирКонсольКода.Форма.ВыделениеМетода");
ШиринГенерируемогоТекста = 180;
