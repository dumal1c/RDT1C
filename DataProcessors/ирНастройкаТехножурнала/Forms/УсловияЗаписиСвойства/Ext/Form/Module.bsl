////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Инициализация формы при октрытии
//
Процедура ПриОткрытии()
	
	ирОбщий.Форма_ПриОткрытииЛкс(ЭтаФорма);
	Если Не ПустаяСтрока(ИмяСвойства) Тогда
		ЭлементыФормы.ВыборИмениСвойства.Значение = НРег(ЗаменитьСимвол(ИмяСвойства, ":", "_"));
	КонецЕсли;
	
	Если РедактированиеУсловийСвойства.Колонки.Найти("Значение") = Неопределено Тогда
		РедактированиеУсловийСвойства.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка"), "Значение"); 
	КонецЕсли;                        
	Если ЗначениеЗаполнено(ТекущееСвойство) Тогда
		ТабличноеПоле = ЭлементыФормы.РедактированиеУсловийСвойства;
		ТекущаяСтрока = ТабличноеПоле.Значение.Найти(ТекущееСвойство, "Свойство");
		Если ТекущаяСтрока <> Неопределено Тогда
			ТабличноеПоле.ТекущаяСтрока = ТекущаяСтрока;
			ТабличноеПоле.ТекущаяКолонка = ТабличноеПоле.Колонки.Значение;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

// Закрыть форму с признаком "оотменить изменения"
//
Процедура КнопкаОКНажатие(Элемент)
	
	Если ВыборИмениСвойства = Неопределено Или СокрЛП(ВыборИмениСвойства) = "" Тогда
		Предупреждение("Имя свойства не выбрано!");
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Закрыть("ОК");
	
КонецПроцедуры

// Инициализация формы
//
Процедура КнопкаОтменаНажатие(Элемент)

	ЭтаФорма.Закрыть("Отмена");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
 
// Процедура обработки события начала редактирования
//
Процедура РедактированиеУсловийСвойстваПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	ПриНачалеРедактированияЭлементаОтбора(ЭлементыФормы.РедактированиеУсловийСвойства, Элемент, НоваяСтрока, Копирование);
	
КонецПроцедуры

// Процедура обработки события показа строки
//
Процедура РедактированиеУсловийСвойстваПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт

	ПриВыводеСтрокиСвойства(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Процедура обработки события изменения данных
//
Процедура РедактированиеУсловийСвойстваСвойствоПриИзменении(Элемент)
	
	ПриИзмененииСвойства(ЭлементыФормы.РедактированиеУсловийСвойства, Элемент);
	
КонецПроцедуры

// Процедура обработки события НачалоВыбора
//
Процедура РедактированиеУсловийСвойстваЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)

	НачалоВыбораЗначенияСвойства(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	ирОбщий.Форма_ПриЗакрытииЛкс(ЭтаФорма);
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	
	ирОбщий.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);

КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт 
	
	ирОбщий.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);

КонецПроцедуры

ирОбщий.ИнициализироватьФормуЛкс(ЭтаФорма, "Обработка.ирНастройкаТехножурнала.Форма.УсловияЗаписиСвойства");
ЭлементыФормы.РедактированиеУсловийСвойства.Колонки.Свойство.ЭлементУправления.СписокВыбора = ПолучитьСписокСвойствСобытий();
ЭлементыФормы.РедактированиеУсловийСвойства.Колонки.Сравнение.ЭлементУправления.СписокВыбора = ПолучитьСписокСравнения();
ЭлементыФормы.ВыборИмениСвойства.СписокВыбора = ПолучитьСписокИменСвойств();
	
